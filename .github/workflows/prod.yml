name: Live Environment

on:
  push:
    tags:
      - v*

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Notify Slack
      if: success()
      id: slack
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        channel: infra-ci-kekdao
        status: BUILD STARTED
        color: warning

    - name: Setup Nodejs
      uses: actions/setup-node@v1
      with:
        node-version: '12.x'

    - name: Cache dependencies
      id: node-cache
      uses: actions/cache@v2
      with:
        path: |
          **/node_modules
        key: prod-${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

    - name: Install dependencies
      if: steps.node-cache.outputs.cache-hit != 'true'
      run: npm ci

    - name: Build
      run: npm run build
      env:
        CI: false
        SKIP_PREFLIGHT_CHECK: true
        REACT_APP_ENV: 'production'
        REACT_APP_HTML_TITLE: 'Universe'

        REACT_APP_WEB3_CHAIN_ID: 1
        REACT_APP_WEB3_POLLING_INTERVAL: 12000
        REACT_APP_WEB3_RPC_WSS_URL: 'wss://mainnet.infura.io/ws/v3/25763b5ba15644a8b3079d3ee755bce5'
        REACT_APP_WEB3_RPC_HTTPS_URL: 'https://mainnet.infura.io/v3/25763b5ba15644a8b3079d3ee755bce5'
        REACT_APP_WEB3_PORTIS_APP_ID: '88597a67-b066-4b66-ad9b-e9262d8716f6'
        REACT_APP_WEB3_WALLET_CONNECT_BRIDGE: 'https://bridge.walletconnect.org'
        REACT_APP_WEB3_COINBASE_APP_NAME: 'universe.xyz'
        REACT_APP_WEB3_TREZOR_EMAIL: 'cezar@universe.xyz'
        REACT_APP_WEB3_TREZOR_APP_URL: 'https://universe.xyz/'
        REACT_APP_ETHERSCAN_API_KEY: '4RSJUUZQFMXUAUUJP5FI5UR5U59N7UIA32'

        REACT_APP_TOKEN_XYZ_ADDR: '0x618679dF9EfCd19694BB1daa8D00718Eacfa2883'
        REACT_APP_TOKEN_USDC_ADDR: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48'
        REACT_APP_TOKEN_BOND_ADDR: '0x0391d2021f89dc339f60fff84546ea23e337750f'
        REACT_APP_TOKEN_AAVE_ADDR: '0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9'
        REACT_APP_TOKEN_COMP_ADDR: '0xc00e94cb662c3520282e6f5717214004a7f26888'
        REACT_APP_TOKEN_SNX_ADDR: '0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f'
        REACT_APP_TOKEN_SUSHI_ADDR: '0x6b3595068778dd592e39a122f4f5a5cf09c90fe2'
        REACT_APP_TOKEN_LINK_ADDR: '0x514910771af9ca656af840dff83e8264ecf986ca'
        REACT_APP_TOKEN_ILV_ADDR: '0x767fe9edc9e0df98e07454847909b5e959d7ca0e'
        REACT_APP_TOKEN_USDC_XYZ_SLP_ADDR: '0xbbbdb106a806173d1eea1640961533ff3114d69a'
        REACT_APP_CONTRACT_YF_STAKING_ADDR: '0x2d615795a8bdb804541C69798F13331126BA0c09'
        REACT_APP_CONTRACT_YF_BOND_ADDR: '0x9f8B01b9Aa4eefb8809c550cF3fe8E904c7Ea659'
        REACT_APP_CONTRACT_YF_AAVE_ADDR: '0x49E01d04F5aB5Cbc110D4f15Eee983e4729FDf29'
        REACT_APP_CONTRACT_YF_COMP_ADDR: '0x4C82B95202F936afC3f493E6779Fb9d3452811a9'
        REACT_APP_CONTRACT_YF_SNX_ADDR: '0x1d59a853085c2b34ABc433e71AE652186BD7fc8F'
        REACT_APP_CONTRACT_YF_SUSHI_ADDR: '0xe3e1860a5653c030818226e0cB1efb4a477A5F32'
        REACT_APP_CONTRACT_YF_LINK_ADDR: '0x1f926b0924f64175dB5d10f652628e7849d0185e'
        REACT_APP_CONTRACT_YF_ILV_ADDR: '0x0Ef4852645FA17fDAd5f15f7b4021251090Ea0C7'
        REACT_APP_CONTRACT_YF_USDC_XYZ_SLP_ADDR: '0xc825D56a12EeC2A7E6f3a1CCe6675e5d41F3Ec3a'

        REACT_APP_CONTRACT_DAO_GOVERNANCE_ADDR: '0xa8047C2a86D5A188B0e15C3C10E2bc144cB272C2'
        REACT_APP_CONTRACT_DAO_BARN_ADDR: '0x7b86600211e62B597E7CEA03476b9EFEb6872962'
        REACT_APP_CONTRACT_DAO_REWARD_ADDR: '0xF306Ad6a3E2aBd5CFD6687A2C86998f1d9c31205'
        REACT_APP_CONTRACT_MERKLE_DISTRIBUTOR_ADDR: '0x2400bf0a2b50882505480a41Be3c21e878cb9c45'

        REACT_APP_DAO_ACTIVATION_THRESHOLD: '50000000'

        REACT_APP_BASE_API_URL: ''

        REACT_APP_PRIMARY_GRAPH_URL: 'https://api.thegraph.com/subgraphs/name/universexyz/daosubgraph'
        REACT_APP_FALLBACK_GRAPH_URL: 'https://api.thegraph.com/subgraphs/name/universexyz/daosubgraph'
        
        REACT_APP_ZAPPER_URL: 'https://api.zapper.fi/v1/'
        REACT_APP_ZAPPER_API_KEY: ''

    - name: Save artifacts
      uses: actions/upload-artifact@v2
      with:
        name: frontend
        path: build

    - name: Notify Slack success
      if: success()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        message_id: ${{ steps.slack.outputs.message_id }}
        channel: infra-ci-kekdao
        status: BUILD SUCCESSFUL
        color: good

    - name: Notify Slack failure
      if: failure()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        message_id: ${{ steps.slack.outputs.message_id }}
        channel: infra-ci-kekdao
        status: BUILD FAILED
        color: danger

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Notify Slack
      if: success()
      id: slack
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        channel: infra-ci-kekdao
        status: DEPLOYMENT STARTED
        color: warning

    - name: Get artifacts
      uses: actions/download-artifact@v2
      with:
        name: frontend

    - name: Configure AWS credetials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Deploy static site to S3
      run: ls -l && aws s3 sync . s3://prod-daouniversexyz-origin --delete

    - name: Invalidate CloudFront cache
      run: |
        #!/usr/bin/env bash
        set -euo pipefail

        CF_DIST_ID=$(aws cloudfront list-distributions --query "DistributionList.Items[?Aliases.Items!=null] | [?contains(Aliases.Items, 'dao.universe.xyz')].Id | [0]" | tr -d \")
        echo "Clearing cache for ${CF_DIST_ID}..."
        CF_INVALIDATION_ID=$(aws cloudfront create-invalidation --distribution-id ${CF_DIST_ID} --paths "/*" | jq -r '.Invalidation.Id')
        while [ $(aws cloudfront get-invalidation --distribution-id ${CF_DIST_ID} --id ${CF_INVALIDATION_ID} | jq -r '.Invalidation.Status') != "Completed" ]; do
          echo "CF_DIST_ID=${CF_DIST_ID} CF_INVALIDATION_ID=${CF_INVALIDATION_ID}: Waiting for CloudFront cache invalidation to complete..."
          sleep 5
        done

    - name: Notify Slack success
      if: success()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        message_id: ${{ steps.slack.outputs.message_id }}
        channel: infra-ci-kekdao
        status: DEPLOYMENT SUCCESSFUL
        color: good

    - name: Notify Slack failure
      if: failure()
      env:
        SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      uses: voxmedia/github-action-slack-notify-build@v1
      with:
        message_id: ${{ steps.slack.outputs.message_id }}
        channel: infra-ci-kekdao
        status: DEPLOYMENT FAILED
        color: danger
